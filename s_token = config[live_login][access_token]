[0;31mInit signature:[0m [0mAPI[0m[0;34m([0m[0maccess_token[0m[0;34m,[0m [0menvironment[0m[0;34m=[0m[0;34m'practice'[0m[0;34m,[0m [0mheaders[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mrequest_params[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m[0m[0m
[0;31mDocstring:[0m     
API - class to handle APIRequests objects to access API endpoints.

Examples
--------

::

    # get a list of trades
    from oandapyV20 import API
    import oandapyV20.endpoints.trades as trades

    api = API(access_token="xxx")
    accountID = "101-305-3091856-001"

    r = trades.TradesList(accountID)
    # show the endpoint as it is constructed for this call
    print("REQUEST:{}".format(r))
    rv = api.request(r)
    print("RESPONSE:\n{}".format(json.dumps(rv, indent=2)))


Output::

    REQUEST:v3/accounts/101-305-3091856-001/trades
    RESPONSE:
    "trades": [
        {
          "financing": "0.0000",
          "openTime": "2016-07-21T15:47:05.170212014Z",
          "price": "10133.9",
          "unrealizedPL": "8.0000",
          "realizedPL": "0.0000",
          "instrument": "DE30_EUR",
          "state": "OPEN",
          "initialUnits": "-10",
          "currentUnits": "-10",
          "id": "1032"
        },
        {
          "financing": "0.0000",
          "openTime": "2016-07-21T15:47:04.963590941Z",
          "price": "10134.4",
          "unrealizedPL": "13.0000",
          "realizedPL": "0.0000",
          "instrument": "DE30_EUR",
          "state": "OPEN",
          "initialUnits": "-10",
          "currentUnits": "-10",
          "id": "1030"
        }
      ],
      "lastTransactionID": "1040"
    }

::

    # reduce a trade by it's id
    from oandapyV20 import API
    import oandapyV20.endpoints.trades as trades

    api = API(access_token="...")

    accountID = "101-305-3091856-001"
    tradeID = "1030"
    cfg = {"units": 5}
    r = trades.TradeClose(accountID, tradeID=tradeID, data=cfg)
    # show the endpoint as it is constructed for this call
    print("REQUEST:{}".format(r))
    rv = api.request(r)
    print("RESPONSE\n{}".format(json.dumps(rv, indent=2)))


Output::

    REQUEST:v3/accounts/101-305-3091856-001/trades/1030/close
    RESPONSE: {
      "orderFillTransaction": {
        "orderID": "1041",
        "financing": "-0.1519",
        "instrument": "DE30_EUR",
        "userID": 1435156,
        "price": "10131.6",
        "tradeReduced": {
          "units": "5",
          "financing": "-0.1519",
          "realizedPL": "14.0000",
          "tradeID": "1030"
        },
        "batchID": "1041",
        "accountBalance": "44876.2548",
        "reason": "MARKET_ORDER_TRADE_CLOSE",
        "time": "2016-07-21T17:32:51.361464739Z",
        "units": "5",
        "type": "ORDER_FILL",
        "id": "1042",
        "pl": "14.0000",
        "accountID": "101-305-3091856-001"
      },
      "orderCreateTransaction": {
        "timeInForce": "FOK",
        "positionFill": "REDUCE_ONLY",
        "userID": 1435156,
        "batchID": "1041",
        "instrument": "DE30_EUR",
        "reason": "TRADE_CLOSE",
        "tradeClose": {
          "units": "5",
          "tradeID": "1030"
        },
        "time": "2016-07-21T17:32:51.361464739Z",
        "units": "5",
        "type": "MARKET_ORDER",
        "id": "1041",
        "accountID": "101-305-3091856-001"
      },
      "relatedTransactionIDs": [
        "1041",
        "1042"
      ],
      "lastTransactionID": "1042"
    }
[0;31mInit docstring:[0m
Instantiate an instance of OandaPy's API wrapper.

Parameters
----------
access_token : string
    Provide a valid access token.

environment : string
    Provide the environment for OANDA's REST api. Valid values:
    'practice' or 'live'. Default: 'practice'.

headers : dict (optional)
    Provide request headers to be set for a request.


.. note::

    There is no need to set the 'Content-Type: application/json'
    for the endpoints that require this header. The API-request
    classes covering those endpoints will take care of the header.

request_params : (optional)
    parameters to be passed to the request. This can be used to apply
    for instance a timeout value:

       request_params={"timeout": 0.1}

    See specs of the requests module for full details of possible
    parameters.

.. warning::
    parameters belonging to a request need to be set on the
    requestinstance and are NOT passed via the client.
[0;31mFile:[0m           ~/oanda_strategy/env/lib/python3.6/site-packages/oandapyV20-0.6.1-py3.6.egg/oandapyV20/oandapyV20.py
[0;31mType:[0m           type
